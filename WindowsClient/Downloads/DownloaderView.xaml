<UserControl x:Class="Overmind.ImageManager.WindowsClient.Downloads.DownloaderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:downloads="clr-namespace:Overmind.ImageManager.WindowsClient.Downloads"
             mc:Ignorable="d" d:DesignHeight="400" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance Type=downloads:DownloaderViewModel}">

    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <Trigger Property="DataContext" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" x:Name="newImageUri" x:FieldModifier="private" Margin="5" VerticalAlignment="Center"
                     PreviewDragEnter="CheckDragData" PreviewDragOver="CheckDragData" PreviewDrop="DropUri_FromTextBox">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding Path=AddDownloadCommand}" CommandParameter="{Binding ElementName=newImageUri, Path=Text}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Grid.Column="1" Content="Add" Margin="5" Padding="5" MinWidth="50"
                    Command="{Binding Path=AddDownloadCommand}" CommandParameter="{Binding ElementName=newImageUri, Path=Text}"/>
        </Grid>

        <ListView x:Name="listView" x:FieldModifier="private" Grid.Row="1" Margin="5" ItemsSource="{Binding Path=DownloadCollection}"
                  AllowDrop="True" PreviewDragEnter="CheckDragData" PreviewDragOver="CheckDragData" PreviewDrop="DropUri_FromListView">
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" Width="300">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Name}" ToolTip="{Binding Path=UriString}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Progress" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ProgressBar Value="{Binding Path=ProgressPercentage, Mode=OneWay}" Width="60" Height="16"
                                             IsIndeterminate="{Binding Path=IsProgressIndeterminate}"
                                             Visibility="{Binding Path=IsDownloading, Converter={StaticResource VisibilityConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Status" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <fa:ImageAwesome ToolTip="{Binding Path=StatusMessage}" Height="16" Width="16">
                                    <fa:ImageAwesome.Style>
                                        <Style TargetType="fa:ImageAwesome">
                                            <Setter Property="Icon" Value="ExclamationCircle"/>
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Success}" Value="True">
                                                    <Setter Property="Icon" Value="CheckCircle"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsCompleted}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </fa:ImageAwesome.Style>
                                </fa:ImageAwesome>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Actions" Width="60">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Command="{Binding Path=CancelCommand}" ToolTip="Cancel" Margin="2,0">
                                        <fa:ImageAwesome Icon="Stop" Height="12" Width="12" Margin="2"/>
                                    </Button>
                                    <!-- Using ElementName instead of RelativeSource breaks the command parameter binding.
                                         The parameter is null during the first CanExecute invocation.
                                         See https://stackoverflow.com/questions/335849/wpf-commandparameter-is-null-first-time-canexecute-is-called -->
                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=downloads:DownloaderView}, Path=DataContext.SelectImageCommand}"
                                            CommandParameter="{Binding}" ToolTip="Select" Margin="2,0">
                                        <fa:ImageAwesome Icon="ExternalLinkSquare" Height="12" Width="12" Margin="2" />
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

    </Grid>
</UserControl>
