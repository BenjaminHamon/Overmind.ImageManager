<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:fa="http://schemas.fontawesome.io/icons/">

    <Style TargetType="Menu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="MenuTopLevelHeaderTemplate">
        <Grid Margin="2">
            <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <Style TargetType="ContextMenu">
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border BorderBrush="{StaticResource GrayBrush}" BorderThickness="1"
                            Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle Fill="{StaticResource GrayBrush}" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
                            <ItemsPresenter Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Border x:Name="templateRoot">
            <Grid>
                <ContentPresenter x:Name="ContentPresenter" Margin="5,2" RecognizesAccessKey="True"
                                  Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <Border BorderBrush="{StaticResource GrayBrush}" BorderThickness="1"
                            Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Rectangle Fill="{StaticResource GrayBrush}" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
                            <ItemsPresenter Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource HighlightBrush}"/>
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="templateRoot">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="HeaderTextGroup" MinWidth="50" MaxWidth="300"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="GestureTextGroup"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" Content="{TemplateBinding Icon}" Height="16" Width="16" Margin="4" VerticalAlignment="Center"/>
                <fa:ImageAwesome x:Name="check" Icon="Check" Height="8" Width="8" Margin="8" VerticalAlignment="Center" Visibility="Collapsed"/>
                <ContentPresenter Grid.Column="2" Content="{TemplateBinding Header}" Margin="5,2" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                <TextBlock Grid.Column="3" Text="{TemplateBinding InputGestureText}" Margin="5,2" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="check" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource HighlightBrush}"/>
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Margin="33,2,2,2" Height="1" Fill="{StaticResource GrayBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
